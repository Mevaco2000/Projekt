<Window x:Class="Projekt.WindowISInfo"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Projekt"
        mc:Ignorable="d"
        Title="Informacje o sortowaniu przez wstawianie" Height="800" Width="800" Icon="/Info_Simple.svg.png">
    <Grid>
        <TextBlock HorizontalAlignment="Center" Height="338" Margin="0,10,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="728"><Run FontWeight="Bold" Text="Sortowanie przez wstawianie (ang. Insert Sort, Insertion Sort)"/><Run Text=" – jeden z najprostszych algorytmów sortowania, którego zasada działania odzwierciedla sposób w jaki ludzie ustawiają karty – kolejne elementy wejściowe są ustawiane na odpowiednie miejsca docelowe. Jest efektywny dla niewielkiej liczby elementów, jego złożoność wynosi O(n2). Pomimo tego, że jest znacznie mniej wydajny od algorytmów takich jak quicksort czy heapsort, posiada pewne zalety:"/><LineBreak/><Run/><LineBreak/><Run Text="liczba wykonanych porównań jest zależna od liczby inwersji w permutacji, dlatego algorytm jest wydajny dla danych wstępnie posortowanych,"/><LineBreak/><Run Text="jest wydajny dla zbiorów o niewielkiej liczebności,"/><LineBreak/><Run Text="jest stabilny."/><LineBreak/><Run Text="Istnieje modyfikacja algorytmu, pozwalająca zmniejszyć liczbę porównań. Zamiast za każdym razem iterować po już posortowanym fragmencie (etap wstawiania elementu), można posłużyć się wyszukiwaniem binarnym. Pozwala to zmniejszyć liczbę porównań do O(nlogn), nie zmienia się jednak złożoność algorytmu, ponieważ liczba przesunięć elementów to nadal O(n2)"/><Run Text="."/><LineBreak/><Run/><LineBreak/><Run FontWeight="Bold" Text="Schemat działania algorytmu:"/><LineBreak/><Run Language="pl-pl" Text="1. "/><Run Text="Utwórz zbiór elementów posortowanych i przenieś do niego dowolny element ze zbioru nieposortowanego."/><LineBreak/><Run Language="pl-pl" Text="2. "/><Run Text="Weź dowolny element ze zbioru nieposortowanego."/><LineBreak/><Run Language="pl-pl" Text="3. "/><Run Text="Wyciągnięty element porównuj z kolejnymi elementami zbioru posortowanego, póki nie napotkasz elementu równego lub elementu większego (jeśli chcemy otrzymać ciąg niemalejący) lub nie znajdziemy się na początku/końcu zbioru uporządkowanego."/><LineBreak/><Run Language="pl-pl" Text="4. "/><Run Text="Wyciągnięty element wstaw w miejsce, gdzie skończyłeś porównywać."/><LineBreak/><Run Language="pl-pl" Text="5. "/><Run Text="Jeśli zbiór elementów nieuporządkowanych jest niepusty, wróć do punktu 2"/><LineBreak/><Run/></TextBlock>
        <Image Margin="139,348,162,45" Source="/Image5.png" Stretch="Fill"/>
    </Grid>
</Window>
